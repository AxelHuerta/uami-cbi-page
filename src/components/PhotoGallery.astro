---
interface Props {
  photos: {
    src: string;
    alt: string;
  }[];
}

const { photos } = Astro.props;
---

<div>
  <div class="grid grid-cols-2 sm:grid-cols-3 gap-3">
    {
      photos.map((photo, index) => (
        <div
          data-photo={index}
          class="aspect-square relative overflow-hidden rounded-md cursor-pointer group"
        >
          <img
            src={photo.src || "/placeholder.svg"}
            alt={photo.alt}
            class="absolute inset-0 w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
          />
          <div class="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors" />
        </div>
      ))
    }
  </div>

  <!-- Lightbox -->
  <div
    id="lightbox"
    class="fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4 hidden"
  >
    <button
      id="closeLightbox"
      class="absolute top-4 right-4 text-white bg-black/20 hover:bg-black/40 p-2 rounded-full transition-colors"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        viewBox="0 0 20 20"
        fill="currentColor"
      >
        <path
          fill-rule="evenodd"
          d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
          clip-rule="evenodd"></path>
      </svg>
    </button>
    <div class="relative w-full max-w-4xl h-[80vh]">
      <img
        id="lightboxImage"
        src=""
        alt=""
        class="absolute inset-0 w-full h-full object-contain"
      />
    </div>
  </div>
</div>

<script>
  const photos = document.querySelectorAll("[data-photo]");
  const lightbox = document.getElementById("lightbox");
  const lightboxImage = document.getElementById(
    "lightboxImage"
  ) as HTMLImageElement;
  const closeButton = document.getElementById("closeLightbox");

  photos.forEach((photo) => {
    photo.addEventListener("click", () => {
      const index = photo.getAttribute("data-photo");
      if (index === null) return;

      const img = photo.querySelector("img");
      if (!img) return;

      lightboxImage.src = img.src;
      lightboxImage.alt = img.alt;
      lightbox?.classList.remove("hidden");
    });
  });

  closeButton?.addEventListener("click", () => {
    lightbox?.classList.add("hidden");
  });

  // Cerrar el lightbox al hacer clic fuera de la imagen
  lightbox?.addEventListener("click", (e) => {
    if (e.target === lightbox) {
      lightbox.classList.add("hidden");
    }
  });

  // Cerrar el lightbox con la tecla Escape
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && !lightbox?.classList.contains("hidden")) {
      lightbox?.classList.add("hidden");
    }
  });
</script>
